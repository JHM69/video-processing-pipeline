name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: video-processor-cluster
  GKE_ZONE: us-central1
  FRONTEND_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/video-processor-frontend
  BACKEND_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/video-processor-backend

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: backend/src/video_processor/requirements.txt

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Backend Dependencies
        working-directory: backend/src/video_processor
        run: pip install -r requirements.txt

      - name: Run Backend Tests
        working-directory: backend/src/video_processor
        run: python -m pytest

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure GCP credentials
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > /tmp/sa-key.json
          gcloud auth activate-service-account --key-file=/tmp/sa-key.json
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Build Frontend Image
        run: |
          docker build -t ${{ env.FRONTEND_IMAGE }}:${{ github.sha }} \
            -t ${{ env.FRONTEND_IMAGE }}:latest \
            ./frontend

      - name: Build Backend Image
        run: |
          docker build -t ${{ env.BACKEND_IMAGE }}:${{ github.sha }} \
            -t ${{ env.BACKEND_IMAGE }}:latest \
            ./backend/src/video_processor

      - name: Push Frontend Image
        run: |
          docker push ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
          docker push ${{ env.FRONTEND_IMAGE }}:latest

      - name: Push Backend Image
        run: |
          docker push ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
          docker push ${{ env.BACKEND_IMAGE }}:latest

  deploy:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure GCP credentials
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > /tmp/sa-key.json
          gcloud auth activate-service-account --key-file=/tmp/sa-key.json
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

      - name: Update Kubernetes Manifests
        run: |
          # Update image tags in deployment files
          sed -i "s|gcr.io/PROJECT_ID/video-processor-frontend:.*|${{ env.FRONTEND_IMAGE }}:${{ github.sha }}|" k8s/frontend.yaml
          sed -i "s|gcr.io/PROJECT_ID/video-processor-backend:.*|${{ env.BACKEND_IMAGE }}:${{ github.sha }}|" k8s/backend.yaml

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/redis.yaml
          kubectl apply -f k8s/backend.yaml
          kubectl apply -f k8s/frontend.yaml

      - name: Verify Deployment
        run: |
          kubectl wait --for=condition=ready pod -l app=frontend --timeout=300s -n video-processor
          kubectl wait --for=condition=ready pod -l app=backend --timeout=300s -n video-processor
          kubectl wait --for=condition=ready pod -l app=redis --timeout=300s -n video-processor